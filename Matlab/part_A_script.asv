% --- Task A1: --- 
%   Objective: Develop A Matlab script to 

% -- Display Circuit in both domains --

%   Upload png to provide visual guide for users
fig = figure('Name', 'Circuit Figure');
imshow('Figures/math_figure_A.png');
title('Circuit Diagram (Time Domain): ')


%   Upload png to provide visual guide for users after laplace forward
%   transform
fig_transformed = figure('Name', 'Circuit Figure Laplace  Domain');
imshow('Figures/transformed_math_figure_A.png');
title('Circuit Diagram (Laplace Domain): ')

% -- assigning values -- 
% assign values for each componenet and print them out - underscores =
% subscript, all voltages are in Voltes, Resistors are in OHMS, Capacitors
% are in Farrads, and L in H
V_in = 5; % Initialize Voltage input variable in volts
C_1 = 0.3; 
V_C1 = 2;
C_2 = 0.8;
V_C2 = 5;
C_3 = 0.1;
V_C3 = 2;
L = 0.6;
Li_l = 6;
R_1 = 2;
R_2 = 8;

% -- Print equations -- 
% Print explanation  message to user in chat
fprintf('\n\n\nSolving for I1, I2, & I3 using KVL & ohms law: \n    ohms law: ((sum of voltage) = (sum of resitors) * i )\n\n')

% Print Mesh 1 calculations
fprintf('Mesh 1 calculations: \n')
fprintf('   V_in(s) - V_ c1(0)/s - V_c1(0)/s = (1/C_1(S))(i_1(s)) +  (1/C_2(S))(i_1(s) - i_2(s)) \n')
fprintf('solve for i_1: \n');
fprintf('   5/s - 2/s - 5/s = i_1/0.3s - (i_1-i_2)/0.8s\n');
fprintf('   i_1 = 12s/55 (5i_2/4s - 2/s) \n');
fprintf('   i_1 = 3i_2/11 - 22/55 2/s) \n');
I_1str = '3i_2/11 - 22/55 2/s';
%fprintf('   %f - %f - V_c3(s) = (1/C_1(S))(i_1(s)) +  (1/C_2(S))(i_1(s) - i_2(s)) \n')
fprintf(['\n   Note: \n    *   after doing a forward laplace transform, the circuit is in the frequency domain, \n    ' ...
    'because this system has initial conditions, the voltage sources  \n    V_cn(0)/s must be added for capacitors and Lin(0) for inductors \n\n'])

% Print Mesh 2 calculations
fprintf('Mesh 2 calculations: \n')
fprintf('   V_c2(0)/s + Li_l(0) = 1/sC_2 (i2 - i1) + Ls (i2) + R1 ( i2 - i3))\n')
fprintf('solve for i_2 or i_3: \n');
fprintf('   %d(0)/s + %f(0) = 1/s%f (i2 - i1) + %f (i2) + %d ( i2 - i3)) \n', V_C2, Li_l, C_2, L, R_1)
disp('   i_3 = 1/2 (i_2(10/11s + 6s/10 + 2)-61/22s + 3)' )
i_3str = '1/2 (i_2(10/11s + 6s/10 + 2)-61/22s + 3)';

% Print Mesh 3 calculations
fprintf('Mesh 3 calculations: \n')
fprintf('   V_C3(0)/(s) = R1(i_3 - i_2) + 1/sC_3 (i_3) + R_2 (i_3) \n')
fprintf('solve for i_2: \n');
disp(['    ', num2str(V_C3),'/s = ', num2str(R_1), '(i_3s - i_2) + 1', '- i_2) + 1//s', num2str(C_3),' (i_3) + ', num2str(R_2),'(i_3)'])
i_2str =  '(1346s^-1 + 12) / (-3 - 20/11s - 12s/10)';
%i_2str = 'i_2 = 2(2/s + 2i_3 + (10/s)(i_3) + 8i_3';
disp(['    i_2 = ',i_2str]);
 
% Now Solve System of equations for Meshes 1 - 3:
fprintf(' \nSolve System of equations for Meshes 1 - 3: \n')

disp(['    I1 = ', '3i_2/11 - 22/55 2/s']);
disp(['    I1 = ', '3/11 (',i_2str,')',' - 22/55 2/s']);
I_1_new = [' I1 = ', '3/11 (',i_2str,')',' - 22/55 2/s'];

fprintf('\n    I3 = %s \n', i_3str);
disp (['    I3 = 1/2 (',i_2str,'(10/11s + 6s/10 + 2)-61/22s + 3) ']);
i_3_new = ['I3 = 1/2 (',i_2str,'(10/11s + 6s/10 + 2)-61/22s + 3) '];

%display final amplitude values
disp ('Final I values:')
disp (['I1 =', I_1_new])
disp (['I2 =', i_2str])
disp (['I2 =', i_3_new])